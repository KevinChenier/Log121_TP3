/******************************************************
Cours:   LOG121
Session: H2019
Groupe:  04
Projet: Laboratoire #3
Ã‰tudiant(e)s: Eugene Wiafe, Ian Garcia-Guerrero, Kevin Chenier, Laurent Sieu
              
              
Professeur : Ghizlane El Boussaidi
Nom du fichier: CadrePrincipale.java
Date cree: 2019-03-25
Date dern. modif. 2019-03-25
*******************************************************
Historique des modifications
*******************************************************

*******************************************************/

package Vue;

import java.util.ArrayList;

import javax.swing.*;

import Controleur.GestionnaireCommande;
import Controleur.PerspectiveControleur;
import Modele.PerspectiveImage;

/**
 * Classe qui represente le cadre principal de l'application. Cette classe contient les boutons pour Redo/Undo
 * des commandes. Contient aussi la methode main pour tester l'application.
 * @author Eugene Wiafe, Ian Garcia-Guerrero
 *
 */
public class CadrePrincipal extends JFrame {

	// Boutons pour utiliser undo et redo
	private JButton undo;
	private JButton redo;

	// Label qui designe l'image principale
	private JLabel nameMainImage;

	private JPanel panneauPrincipal;

	private Onglet mainImage;
	private Onglet rightPersceptive;
	private Onglet leftPersceptive;

	private GestionnaireCommande commande;
	private PerspectiveControleur perspectiveControleur;

	public CadrePrincipal() {
		this.perspectiveControleur = new PerspectiveControleur();
		this.commande = GestionnaireCommande.getInstance();
		initComponents();
		initPerspectives();
		this.setJMenuBar(new MenuVue(perspectiveControleur));
		this.setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 * 
	 * Le code ci-dessous est genere par NetBeans
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		panneauPrincipal = new JPanel();
		nameMainImage = new JLabel();
		undo = new JButton();
		redo = new JButton(); 

		mainImage = new Onglet(perspectiveControleur.ID_MAIN_IMAGE, perspectiveControleur);
		rightPersceptive = new Onglet(1, perspectiveControleur);
		leftPersceptive = new Onglet(2, perspectiveControleur);

		GroupLayout jPanel1Layout = new GroupLayout(panneauPrincipal);
		panneauPrincipal.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 100, Short.MAX_VALUE));
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 100, Short.MAX_VALUE));

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		undo.setText("Undo");
		undo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				undoActionPerformed(evt);
			}
		});

		redo.setText("Redo");
		redo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				redoActionPerformed(evt);
			}
		});

		rightPersceptive.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		rightPersceptive.setPreferredSize(new java.awt.Dimension(225, 225));

		GroupLayout jPanel2Layout = new GroupLayout(rightPersceptive);
		rightPersceptive.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
				jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));

		mainImage.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		mainImage.setPreferredSize(new java.awt.Dimension(225, 225));

		GroupLayout jPanel3Layout = new GroupLayout(mainImage);
		mainImage.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(
				jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(
				jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));

		leftPersceptive.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		leftPersceptive.setPreferredSize(new java.awt.Dimension(225, 225));

		GroupLayout jPanel4Layout = new GroupLayout(leftPersceptive);
		leftPersceptive.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(
				jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));
		jPanel4Layout.setVerticalGroup(
				jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 223, Short.MAX_VALUE));

		nameMainImage.setHorizontalAlignment(SwingConstants.CENTER);
		nameMainImage.setText("Image Principale");

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addGap(117, 117, 117).addComponent(undo)
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(redo).addGap(117, 117, 117))
				.addGroup(layout.createSequentialGroup().addGap(48, 48, 48)
						.addComponent(leftPersceptive, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addGap(60, 60, 60)
						.addComponent(mainImage, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addGap(66, 66, 66)
						.addComponent(rightPersceptive, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(44, Short.MAX_VALUE))
				.addGroup(
						GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
								.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(nameMainImage,
										GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE)
								.addGap(386, 386, 386)));
		layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(61, 61, 61)
				.addComponent(nameMainImage, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
				.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addComponent(mainImage, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(rightPersceptive, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(leftPersceptive, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addComponent(redo).addComponent(undo))
				.addContainerGap(114, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Initialise les perspectives avec son controlleur.
	 */
	private void initPerspectives() {
		ArrayList<PerspectiveImage> imagePerspectives = new ArrayList<>(3);
		PerspectiveImage imageCenter = new PerspectiveImage();
		PerspectiveImage imageRight = new PerspectiveImage();
		PerspectiveImage imageLeft = new PerspectiveImage();

		imageCenter.attach(mainImage);
		imageRight.attach(rightPersceptive);
		imageLeft.attach(leftPersceptive);

		imagePerspectives.add(imageCenter);
		imagePerspectives.add(imageRight);
		imagePerspectives.add(imageLeft);
		
		perspectiveControleur.setImages(imagePerspectives);
	} 

	/**
	 * Appelle la methode undo de commande. 
	 * @param evt Evenement qui declanche l'action
	 */
	private void undoActionPerformed(java.awt.event.ActionEvent evt) {
		commande.undo();
	}

	/**
	 * Appelle la methode redo de commande. 
	 * @param evt Evenement qui declanche l'action
	 */
	private void redoActionPerformed(java.awt.event.ActionEvent evt) {
		commande.redo();
	}

	public static void main(String args[]) {
		new CadrePrincipal();
	}

}